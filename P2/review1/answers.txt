Task 1

One UML feature that can be found in the model is the Abstract Class "Location" which does not
have a complete declaration. The class "Location" is used by other classifiers as a target of 
generalization by class "Elevator" and class "Floor", as well as a target of aggregation by the 
class "Person".  

Task 2

We choose the contraint "Floors must form a single chain."
The multiplicities of the FloorOrder relationship are above 0..1 and below 0..1.

Imagine the multiplicity of `above` would be changed to 0..2 which would mean each floor could have up to 2 floors above it which could lead to a layout like:

3A  3B  3C  3D
  2A      2B
       1

This floor layout, while unrealistic, would not have a single chain, but rather four chains to connect all the floors.

Task 3

For the formalization of the constraint "Elevator must be beeping iff the weight of the passengers
inside the Elevator is greater than its maxLoad.", the entities Person and Elevator are needed.
The entity Person is needed, because it represents a passenger and has weight as its attribute,
which is required for the calculation of the total weight of passengers inside the Elevator. The 
entity Elevator is needed, because it has the attributes maxLoad, which will be compared with the
total weight, and beeping, which will be set to true when totalWeight > maxLoad, like stated in the
constraint.

Task 4

In the constraint "Elevator must be beeping iff the weight of the passengers inside the Elevator
is greater than its maxLoad.", the OCL constructs "pre" and "post" can be used, meaning we can
state pre- and postcondition. In the precondition we compare the weight of passengers in the Elevator
with maxLoad and in the postcondition we set beeping to true. So if precondition holds, meaning 
maxLoad is exceeded, postcondition will be executed, meaning the Elevator will be beeping.
