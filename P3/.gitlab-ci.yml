# Task 1-a : three stages : install, build and test
stages:
  - install
  - build
  - test

# Task 1-b: using Docker image
image: node:latest

# Task 1-c: caching for all jobs
cache:
  paths:
    - P3/node_modules/

# Task 1-d: job install in the stage install
install:
  stage: install
  #install the dependencies of ts-elevator
  # what is script? script will run in terminal
  script: npm ci

# Task 1-e: job build in the stage build
build:
  stage: build
  #compiles the TypeScript source code to Javascript.
  script: npm run build
  #The job saves the generated *.js and *.d.ts files as an artifact called lib.
  artifacts:
    name: "lib"
    paths:
      - P3/lib/*.js
      - P3/lib/*.d.ts

# Task 1-f: job lint in the stage test
lint:
  stage: test
  # execute the configured linter on the source code.
  script: npm run lint

# Task 1-g: job test in the stage test
test:
  stage: test
  #execute the tests of the project
  script: npm run test
  #coverage is extracted from the job output
  #the coverage percentage will appear on pipeline
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  #it saves the generated HTML coverage report as an artifact called coverage and reports the generated JUnit XML file containing the test results to GitLab.
  artifacts:
    name: "coverage"
    paths:
      - P3/coverage/*.html
      - P3/coverage/*.js
      - P3/coverage/*.css
    reports:
      junit: P3/test-results.xml
